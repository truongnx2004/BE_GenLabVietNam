require("dotenv").config();
const express = require("express");
const cors = require("cors");
const sequelize = require("./config/database");

// Import c√°c routes
const bookingRoute = require("./routes/bookingRoutes");
const authRoutes = require("./routes/authRoutes");
const profileRoutes = require("./routes/profileRoutes");
const managerRoutes = require("./routes/managerRoutes");
const adminRoutes = require("./routes/adminRoutes");
const sampleRoutes = require("./routes/staffSampleRoutes");

//Test route
const testRoutes = require('./routes/testRoutes');

// üîå IMPORT SOCKET SERVER
const http = require("http");
const socketServer = require("./socketServer"); // ƒê·∫£m b·∫£o ƒë√∫ng ƒë∆∞·ªùng d·∫´n

const app = express();
const server = http.createServer(app); // t·∫°o HTTP server

// Khai b√°o middleware
app.use(cors({ origin: "http://localhost:3000" }));
app.use(express.json());

//Map
const routeMap = require("./routes/routeMap");

// Routes
app.use("/api/auth", authRoutes);
app.use("/api/profile", profileRoutes);
app.use("/api/booking", bookingRoute);
app.use("/api/manager", managerRoutes);
app.use("/api/admin", adminRoutes);
app.use("/api/staff", sampleRoutes);
app.use("/api/route", routeMap);

// Test route
app.use('/test', testRoutes);


// Kh·ªüi ƒë·ªông socket server
socketServer(server); // truy·ªÅn server v√†o ƒë·ªÉ socket.io ho·∫°t ƒë·ªông

// K·∫øt n·ªëi DB v√† kh·ªüi ƒë·ªông c·∫£ server + socket
sequelize
    .authenticate()
    .then(() => {
        console.log("‚úÖ K·∫øt n·ªëi database th√†nh c√¥ng");
        server.listen(3001, () => {
            console.log("üöÄ Server + Socket.IO ch·∫°y t·∫°i http://localhost:3001");
        });
    })
    .catch((err) => {
        console.error("‚ùå L·ªói k·∫øt n·ªëi:", err);
    });
